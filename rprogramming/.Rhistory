A = matrix(
c(1, 0.8, 0, 0, 0.6, 0, -1, 0, 0.8, 0, 0, -0.6, 0, -0.8, -0.8, 0, -0.6, 0.6),
nrow = 6, ncol = 3, byrow = TRUE)
A
qr(A)$rank
B = matrix()
B = matrix(
c(0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 1, 0),
nrow = 8, ncol = 4, byrow = TRUE)
B
qr(B)$rank
C = matrix(
c(0, 0, 0, 0.8, 1, 0, 0, 0.6, 0, 0.8, 0, 0, -1, -0.6, 0, 0, 0, -0.8, 1, 0, 0, 0.6, 0, 0, 0, 0, -1, -0.8, 0, 0, 0, -0.6),
nrow = 8, ncol = 4, byrow = TRUE)
C
qr(C)$rank
D = matrix(
c(0.8, 0, 0, 0.8, 0, 0.6, 0, 0, -0.6, -1, -0.8, 0.8, 0, 0, 0 , -0.6, -0.6, 0 , 0, 0, 0, -0.8, -0.8, 0, 0, 0, 0.6, -0.6, 0, 0, 0, 0, 0.8, -0.8, 1, 0, 0, 0.6, 0.6, 0),
nrow = 8, ncol = 5, byrow = TRUE)
D
qr(D)$rank
A = matrix(
+     c(1, 0.6, 0, 0, 0.8, 0, -1, 0, 0.6, 0, 0, -0.8, 0, -0.6, -0.6, 0, -0.8, 0.8),
+     nrow = 6, ncol = 3, byrow = TRUE)
A = matrix(
c(1, 0.6, 0, 0, 0.8, 0, -1, 0, 0.6, 0, 0, -0.8, 0, -0.6, -0.6, 0, -0.8, 0.8),
nrow = 6, ncol = 3, byrow = TRUE)
qr(A)$rank
C = matrix(
c(0, 0, 0, 0.6, 1, 0, 0, 0.8, 0, 0.6, 0, 0, 0, -0.6, 1, -0.6, 0, 0.8, 0, -0.8, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0),
nrow = 8, ncol = 4, byrow = TRUE)
C
C = matrix(
c(0, 0, 0, 0.6, 1, 0, 0, 0.8, 0, 0.6, 0, 0, -1, -0.8, 0, 0, 0, -0.6, 1, -0.6, 0, 0, 0.8, 0, -0.8, 0, 0, -1, 0, 0, 0, 0, 0),
nrow = 8, ncol = 4, byrow = TRUE)
C = matrix(
c(0, 0, 0, 0.6, 1, 0, 0, 0.8, 0, 0.6, 0, 0, -1, -0.8, 0, 0, 0, -0.6, 1, -0.6, 0, 0, 0.8, 0, -0.8, 0, 0, -1, 0, 0, 0, 0),
nrow = 8, ncol = 4, byrow = TRUE)
C
C = matrix(
c(0,0,0,0.6,1,0,0,0.8,0,0.6,0,0,-1,-0.8,0,0,0,-0.6,1,-0.6,0,0.8,0,-0.8,0,0,-1,0,0,0,0,0),
nrow = 8, ncol = 4, byrow = TRUE)
C
qr(C)$rank
D = matrix(
c(0.6,0,0,0.6,0,-0.6,0.6,0,0,0,-0.8,-0.8,0,0,-1,0,-0.6,-0.6,0,0,0,0.8,-0.8,0,0,0,0,0.6,-0.6,0,0,0,0.8,0.8,1),
nrow = 8, ncol = 5, byrow = TRUE)
D = matrix(
c(0.6,0,0,0.6,0,0.8,0,0,-0.8,0,-0.6,0.6,0,0,0,-0.8,-0.8,0,0,-1,0,-0.6,-0.6,0,0,0,0.8,-0.8,0,0,0,0,0.6,-0.6,0,0,0,0.8,0.8,1),
nrow = 8, ncol = 5, byrow = TRUE)
D
qr(D)$rank
A
qr(A)$rank
B
qr(B)$rank
C
qr(C)$rank
D
qr(D)$rank
help.start()
x <- rnorm(50)
y <- rnorm(50)
plot (x,y)
ls
ls()
rm(A,B,C,D)
rm(X,Y)
rm(x,y)
x <- 1:20
w <- 1 + sqrt(x)/2;
dummy <- data.frame(x=x,y=x+rnorm(x)*w)
dummy
fm <- lm(y ~ x, data=dummy)
summary(fm)
fm1 <- lm(y~x, data = dummy, weight = 1/w^2)
summary(fm1)
attach(dummy)
lrf <- lowess(x,y)
plot(x,y)
lines(x,lrf$y)
abline(0,1,lty=3)
abline(coef(fm))
cube <- function(x, n) {}
cube <- function(x, n) {x^3}
cube(3)
cube(3, 2)
cube(3, 135634)
cube <- function(){x^3}
cube(3)
add2 <- function(x, y) {
x + y
}
add2(1,2)
x <- 1:20
above(x, 12)
source('~/.active-rstudio-document')
above(x, 12)
source('~/.active-rstudio-document')
columnmean(airquality)
airquality
columnmean(airquality, na.rm = T)
source('~/.active-rstudio-document')
columnmean(airquality)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(30)
f(3)
library(KernSmooth)
getwd()
setwd("~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming")
getwd()
?mean
load(specdata)
filepath <- getwd()
filepath
?clear
??clear
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir="diet_data")
list.files("diet_data")
list.file("spec_data")
list.files("spec_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
x <- summary(andy)
x$min
x$Min.
x
names(andy)
andy[1, "Weight"]
andy[1, "weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day == 30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
files <- list.files("diet_data")
files
files[1]
files[2]
files <- list.files("specdata")
files
files[1]
files[1:200]
files[2:5]
files <- list.files("diet_data")
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names=TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
for (i in 1:5) {print(i)}
for (i in 1:5) {}
for (i in 1:5) {dat <- rbind(dat, read.csv(files_full[i]))}
dat <- data.frame()
for (i in 1:5) {dat<-rbind(dat,read.csv(files_full[i]))}
dat
str(dat)
median(dat$Weight)
median(dat$Weight, na.rm=TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight, na.rm=TRUE)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/functions.R')
weightmedian("diet_data", 4)
source('~/.active-rstudio-document')
weightmedian("diet_data", 4)
files_list <- list.files("specdata", full.names=TRUE)
files_list
head("001.csv")
head(001.csv)
x <- read.csv("001.csv")
files_list <- list.files("specdata", full.names=TRUE)
x <- read.csv(files_list[1])
x
head(x)
data_subset <- x["sulfate",]
data_subset
x[sulfate]
x["sulfate"]
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
print x
print(x)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
data
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
?mean
mean(1:10)
id <- 25:30
for (i in id) {print(i)}
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
files_full[1]
files_list[1]
print(files_list[1])
x <- read.csv(files_list[1])
x
complete.cases(x)
y <- complete.cases(x)
x[u]
x[y]
x[[y]]
x[y,]
x[,y]
x[y,]
y <- is.na(x)
x[y,]
nrows(x)
nrow(x)
complete.cases(x)
y <- complete.cases(x)
x[y,]
x[[y]]
x <- read.csv(files_list[])
x <- read.csv(files_list[i])
x_complete <- complete.cases(x)
num_complete <- nrow(x[x_complete,])
num_complete
num_comp <- nrow(read.csv(files_list[i])[complete.cases(read.csv(files_list[i])),])
num_comp
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
complete("specdata", 1)
complete("specdata", 1)
complete("specdata", 1)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
data <- data.frame()
colnames(data) <- c('id', 'nobs')
colnames(data) <- c("id", "nobs")
colnames(data)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
data
names(data)
names(data)[1]
names(data)[1] <- "hello"
source('~/.active-rstudio-document')
names(data)[1] <- "hello"
complete("specdata", 1)
?colname
?colnames
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/complete.R')
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
for (i in files_list) {print (i)}
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/corr.R')
cr <- corr("specdata", 150)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/corr.R')
corr("specdata", 150)
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/corr.R')
cr <- corr("specdata", 150)
head(cr)
summary(crx)
summary(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('~/Documents/Princeton/learningprogramming/datascience/JHU_coursera/rprogramming/pollutantmean.R')
